"""auto-update

Revision ID: 51ec8995a648
Revises: 
Create Date: 2025-10-26 17:16:54.795224

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '51ec8995a648'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patient',
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=False),
    sa.Column('gender', sa.Enum('female', 'male', 'other', name='gender'), nullable=False),
    sa.Column('medical_record_number', sa.Integer(), nullable=False),
    sa.Column('patient_address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('emergency_contact', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('medical_record_number')
    )
    op.create_table('reporter',
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('job_title', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('organization_name', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('organization_address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('disease',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('category', sa.Enum('bacterial', 'viral', 'parasitic', 'other', name='diseasecategory'), nullable=False),
    sa.Column('date_detected', sa.DateTime(), nullable=False),
    sa.Column('symptoms', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('severity_level', sa.Enum('low', 'medium', 'high', 'critical', name='severitylevel'), nullable=False),
    sa.Column('lab_results', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('treatment_status', sa.Enum('none', 'ongoing', 'completed', name='treatmentstatus'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['reporter.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['reporter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('status', sa.Enum('draft', 'submitted', 'under_review', 'approved', name='raportstatus'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=True),
    sa.Column('disease_id', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('reporter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['disease_id'], ['disease.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['reporter.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['reporter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('report')
    op.drop_table('disease')
    op.drop_table('user')
    op.drop_table('reporter')
    op.drop_table('patient')
    # ### end Alembic commands ###
