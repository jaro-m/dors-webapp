[tool.isort]
py_version=313
skip = [".gitignore", ".json"]
line_length = 90
multi_line_output = 3
# default_section = FIRSTPARTY
use_parentheses = true
include_trailing_comma = true
force_alphabetical_sort_within_sections = true
# force_sort_within_sections = true
# color_output = true
only_sections = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "ve",
]

# Same as Black.
line-length = 90
indent-width = 4

# Assume Python 3.13
target-version = "py313"

# use "github" for github actions
# output-format = "full"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E5", "E7", "E9", "F", "B", "W2"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]


# [tool.ruff.lint.isort.sections]
# external-libs = ["fastapi", "requests"]

[tool.ruff.lint.isort]
case-sensitive = true

# section-order = ["future", "standard-library", "external-libs", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
# Like Black, use double quotes for strings ("preserve" will ignore that check)
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.coverage.run]
omit = [
    # omit anything in a tests directory from coverage report
    "*/tests/*"
    ]
